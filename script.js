let massive = ['Метод splice(номер ячейки, количество ячеек) - изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые.array.splice(start[, deleteCount[, item1[, item2[, ...]]]])', 'Метод filter() - создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции.', 'Метод map() - создаёт новый массив с результатом вызова указанной функции для каждого элемента массива.', 'Метод pop() - удаляет последний элемент массива.','Метод shift() - удаляет первый элемент массива.','Метод push() - Если вы хотите добавить в конец массива один или несколько элементов','Метод unshift() -  если один или несколько элементов нужно добавить не в конец, а в начало массива','Метод length - возвращает число элементов в массиве.','Метод concat() - можно создать новый массив путем конкатенации (слияния) двух существующих массивов.','Метод slice() - Этот метод вырезает часть массива, начиная с указанного индекса, может принимать два аргумента, указывающих, с какого и до какого элемента нужно сделать срез, этот метод принимает также отрицательные числа.','Метод toUpperCase() - используется для перевода всей строки в верхний регистр.','Метод toLowerCase() - используется для перевода строки в нижний регистр.','Метод substring() - этот метод тоже возвращает вырезанную часть строки, но он не принимает отрицательных чисел в качестве аргументов.','Метод substr() - Метод substr() напоминает slice(), но здесь второй аргумент указывает длину той части, которую нужно вырезать.','Метод replace() - используется для замены части строки другой строкой. Этот метод чувствителен к регистру.','Метод trim() - удаляет пробелы в начале и в конце строки','Метод split() - позволяет преобразовать строку в массив.','Метод charCodeAt -  возвращает значение Юникод символа строки под указанным индексом.','Метод charAt() - А этот метод возвращает сам символ с указанным индексом.','Метод padStart() - метод используется для добавления символов в начале строки, чтобы результирующая строка достигла указанной длины. По умолчанию в начале строки добавляются пробелы, но может добавляться и другая строка, указанная во втором аргументе.','Метод padEnd() - padEnd аналогичен padStart, только добавляет символы в конце строки.','Метод keys() - этот метод возвращает ключи объекта.','Метод values() - возвращает значения объекта.','Метод create() - с помощью этого метода можно создать новый объект из существующего.','Метод Object.freeze() - замораживает объект. То есть он предотвращает добавление новых свойств к объекту, удаление старых свойств из объекта и изменение существующих свойств или значения их атрибутов перечисляемости, настраиваемости и записываемости.','Метод assign() - этот метод используется для копирования свойств объекта в другой объект.','Метод toFixed() - форматирует число, используя запись с фиксированной запятой.','Метод toPrecision() - этот метод используется для конвертации числа в число с указанной точностью. Метод возвращает полученное значение в виде строки.','Метод parseFloat() - Этот метод принимает строку в качестве аргумента и возвращает число с плавающей точкой.','Метод Number() - используется для преобразования других типов данных в числа.','Метод parseInt() - этот метод принимает строку в качестве аргумента и возвращает целое число в соответствии с указанным основанием системы счисления.','Метод every() - Этот метод используется для проверки того, удовлетворяют ли элементы указанного массива определенному условию. Если все элементы удовлетворяют условию, метод возвращает true, в противном случае — false.','Метод includes() - при помощи метода includes() можно проверить, есть ли определенный элемент в массиве. Если указанный элемент в массиве присутствует, возвращается true.','for…of iterator - этот оператор выполняет цикл обхода итерируемых объектов.','Spread - оператор принимает массив и расширяет его на отдельные элементы. На применение этого оператора указывает троеточие.','Метод reduce() - сводит массив к одному значению.','Функция созданная внутри объекта называется - методом','Массив это - структура данных, хранящая набор значений','Метод forEach() - выполняет функцию callback один раз для каждого элемента, находящегося в массиве в порядке возрастания. Она не будет вызвана для удалённых или пропущенных элементов массива.','Метод sort() - позволяет отсортировать массив путём преобразования его элементов в строки и сравнения этих строк в порядке следования кодовых символов Unicode (сортирует массив по алфавиту). Обращаю Ваше внимание, что метод sort() не создает новый объект Array, а производит сортировку переданного массива.','ClassList.toggle(className, force?) - удаляет существующий класс или добавляет новый.','Метод getMinutes() - возвращает текущее значение минут (число от 0 до 59). Метод следует применять к объекту Date, см. его для лучшего понимания.','Метод getSeconds() - возвращает текущее значение секунд (число от 0 до 59). Метод следует применять к объекту Date, см. его для лучшего понимания.','Метод getHours() - возвращает значение текущего часа (число от 0 до 23). Метод следует применять к объекту Date, см. его для лучшего понимания. Синтаксис. дата. getHours (); Пример.','Метод setTimeout() - это встроенная функция JavaScript, устанавливающая таймер обратного отсчета (в миллисекундах) для выполнения функции обратного вызова по завершении заданного времени.','Рекурсия - это когда функция вызывает саму себя','Метод preventDefault () - отменяет событие, если оно отменяемое, без остановки дальнейшего распространения этого события.','GetElementById - это метод объекта document в языке JavaScript. Он предназначен для того, чтобы возвращать ссылку на какой-то элемент (element) страницы по его id. Например, мы хотим, чтобы пользователю в определенном месте страницы выводилось время его захода на нее. Будем выводить это время в определенном теге <div> с id ','Метод document.createElement() - метод предназначен для создания тегов, или, иначе, html-элементов',''],
    title = [],
    btnCont = document.querySelector('.first__continue'),
    btnNull = document.querySelector('.first__null');

btnCont.innerHTML = 'Начать'

btnCont.addEventListener('click', function(event){
    event.preventDefault();
    choose();
    btnCont.innerHTML = 'Продолжить'
});

mainInfo(massive)

function choose(){
    if(massive.length == 0 && title.length == 0){
        alert('Ты все прошел'); 
        btnCont.innerHTML = 'Начать';
        btnNull.style.display = 'flex';
        btnNull.innerHTML = 'Обновить';
        return false;
    }
    let ran = random(0, massive.length);
    alert(title[ran] + ' ?');
    alert(massive[ran]);
    for(let key in massive){
        massive[ran] == massive[key] ? massive.splice(key,1) : '';
    }
    for(let key in title){
        title[ran] == title[key] ? title.splice(key,1) : '';
    }
  
}

function random(min, max){
    return Math.floor(Math.random() * (max - min) + min);
}


function mainInfo(arr1){
    for(let key of arr1){
    title.push(key.split(' - ')[0]);
}
}console.log(title.length);